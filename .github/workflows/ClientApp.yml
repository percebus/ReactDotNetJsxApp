name: ClientApp
on:
  push:
  # schedule: # TODO? or XXX?
  #   - cron: '0 0 * * *'

env:
  NODE_VERSION: 18
  WORKSPACE: ./Solution/WeatherForecast.WebApp/ClientApp

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        working-directory: $${{ env.WORKSPACE }}
        run: ls -la

      - name: setup node@${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: setup
        working-directory: $${{ env.WORKSPACE }}
        run: npm run setup:ci --if-present
      - name: npm install
        working-directory: $${{ env.WORKSPACE }}
        run: npm ci
      - name: ls node_modules
        working-directory: $${{ env.WORKSPACE }}
        run: ls -la ./node_modules
      - name: npm audit
        working-directory: $${{ env.WORKSPACE }}
        run: npm audit
        continue-on-error: true # XXX?

      # TODO
      # - name: npm test
      #   run: npm test

      - name: dist
        working-directory: $${{ env.WORKSPACE }}
        run: npm run build
      - name: dist.zip
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: $${{ env.WORKSPACE }}/dist


  builds:
    if: github.ref == 'refs/heads/main'
    needs: build
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        node: [16, 18]
    runs-on: ${{ matrix.os }}
    name: Build @ node:${{ matrix.node }}@${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        working-directory: $${{ env.WORKSPACE }}
        run: ls -la

      - name: setup node@${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: setup
        working-directory: $${{ env.WORKSPACE }}
        run: npm run setup:ci --if-present
      - name: npm install
        working-directory: $${{ env.WORKSPACE }}
        run: npm ci

      # TODO
      # - name: npm test
      #   run: npm test

      - name: dist
        working-directory: $${{ env.WORKSPACE }}
        run: npm run build
